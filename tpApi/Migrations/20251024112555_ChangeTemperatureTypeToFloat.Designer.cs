// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using tpApi.Data;

#nullable disable

namespace tpApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251024112555_ChangeTemperatureTypeToFloat")]
    partial class ChangeTemperatureTypeToFloat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("tpApi.Models.Forecast", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("city");

                    b.Property<string>("Condition")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("condition");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT")
                        .HasColumnName("date");

                    b.Property<float>("Temperature")
                        .HasColumnType("REAL")
                        .HasColumnName("temperature");

                    b.HasKey("Id");

                    b.ToTable("forecast");
                });
#pragma warning restore 612, 618
        }
    }
}
